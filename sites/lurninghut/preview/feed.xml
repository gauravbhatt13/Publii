<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>lurninghut</title>
    <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/feed.xml" rel="self" />
    <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview" />
    <updated>2021-09-21T00:31:26+10:00</updated>
    <author>
        <name>gauravbhatt</name>
    </author>
    <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview</id>

    <entry>
        <title>GIT Error: src refspec main does not match any: Solved</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/git-error-src-refspec-main-does-not-match-any-solved.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/git-error-src-refspec-main-does-not-match-any-solved.html</id>
            <category term="GIT"/>

        <updated>2021-09-21T00:31:26+10:00</updated>
            <summary>
                <![CDATA[
                    GIT default branch name earlier was 'master' and in order to move the tech industry to a more inclusive, open culture - and removing language like "master/slave", alternate options popped up suggesting default/primary as on option which eventually settled on naming default directories as 'main'.
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>GIT default branch name earlier was 'master' and in order to move the tech industry to a more inclusive, open culture - and removing language like "master/slave", alternate options popped up suggesting default/primary as on option which eventually settled on naming default directories as 'main'. This caused a very common issue '<strong>src refspec main does not match</strong>' due to the fact that when we go to Github and create a new repository, it now names it as 'main' instead of 'master' as shown in below images,  while when we do 'git init' in our local machine and commit, it will create a branch named 'master'. So when we try to push that branch to Github it complains with the error '<strong>src refspec main does not match'. </strong>Following image show step by step order to recreate the error.</p>
<ul>
<li>Create new repository in Github.</li>
</ul>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/cropped.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2xl.png 1600w"  alt="" width="249" height="209"></figure><figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/cropped-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-2-2xl.png 1600w"  alt="" width="561" height="331"></figure>
<ul>
<li>Create new repository in local machine</li>
</ul>
<figure class="post__image"><img loading="lazy"  style="color: var(--text-editor-body-color); font-family: var(--font-base); font-weight: var(--font-weight-normal); font-size: 17.7235px; outline: 3px solid rgba(var(--primary-color-rgb), 0.55)  !important;" src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/cropped-4.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-4-2xl.png 1600w"  alt="" width="567" height="375"></figure>
<p>Note that the local branch name is master.</p>
<ul>
<li>Set upstream and push</li>
</ul>
<p>Following the instruction mentioned in the step one image to add remote origin and push:</p>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/cropped-6.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/17/responsive/cropped-6-2xl.png 1600w"  alt="" width="1216" height="160"></figure>
<h4>SOLUTION</h4>
<p>Following steps would help in resolving the issue:</p>
<p>Rename the current branch to main</p>
<pre>git branch -m master main</pre>
<p> </p>
<p>Once the local branch is renamed try the git push -u origin main again and you should see the upload.</p>
<h4><br><br>Configure GIT default directory</h4>
<p>Also make sure that we change the git configuration to configure default directory as follows:</p>
<pre class="lj lk ll lm ln ow gv be"><span id="b2cc" class="ej ox mu dm ov b kn oy oz s pa" data-selectable-paragraph="">git config --global init.defaultBranch main<br></span></pre>
<p>The above command will make sure that every next time you create a new git repository locally, it will create default branch with 'main' as the branch name.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>HTTP Basics</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/http-basics.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/http-basics.html</id>
            <category term="Networking"/>

        <updated>2021-09-17T05:37:00+10:00</updated>
            <summary>
                <![CDATA[
                    HTTP is the primary application layer protocol that rules our internet. You can read this webpage because your browser just used this protocol to talk to the computer hosting this webpage using HTTP protocol. Let's break HTTP into smaller pieces to understand the concept. Any&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>HTTP is the primary application layer protocol that rules our internet. You can read this webpage because your browser just used this protocol to talk to the computer hosting this webpage using HTTP protocol. Let's break HTTP into smaller pieces to understand the concept.</p>
<h4>H stands for HyperText</h4>
<p><img loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/4/41/Sistema_hipertextual.jpg" data-is-external-image="true" ></p>
<p>Any document file that we create may link to terms which have definition in some other document file stored locally or in another computer. Hypertext provides a way to link those information so that a complete graph of the document can be navigated just by following the links. This is a very powerful concept that is driving the content present on internet today. A markup language, which is popularly known as HTTP (Hypertext markup language) is used to describe such hyper text which can be understood by the browser and other clients and the documents created using it are known as HTML documents or webpages.</p>
<h4>Transfer Protocol</h4>
<p>Every protocol in computer world is governed by a set of rules. When two computer machines talk to each other, they need to follow guidelines to understand the signalling from each other. Purpose of HTTP is to transfer the hypertext between computers so that computers can request for a document or respond to a request by providing the document. Below image shows an HTTP request made using telnet (not browser) program.</p>
<p><img loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/c/c6/Http_request_telnet_ubuntu.png" data-is-external-image="true" ></p>
<p>As we can see above, using rules around requesting and response we can complete transfer of hypertext document between computers.</p>
<h4>HTTP is an Application Layer protocol</h4>
<p>What is that? Well since HTTP protocol rule defines how to request for a document and what to expect as a response, it falls under the category of the application layer in various networking models like OSI model or TCP/IP suite. Typically or protocols which define human interaction with a computer fall under the category of the Application layer. Refer to the below image for typical categorisation in OSI model:</p>
<p><img loading="lazy" src="https://infosys.beckhoff.com/content/1033/tf6310_tc3_tcpip/Images/png/84433547__en-US__Web.png" data-is-external-image="true"  alt="Beckhoff Information System - English"></p>
<h4> Basic Features</h4>
<p><img loading="lazy" src="http://apps.testinsane.com/mindmaps/uploads/html/HTTP%20Hypertext%20Transfer%20Protocol_files/images/HTTP%20Hypertext%20Transfer%20Protocol.jpg" data-is-external-image="true" ></p>
<p>There are three basic features that make HTTP a simple but powerful protocol:</p>
<ul class="list">
<li>
<p><strong>HTTP is connectionless:</strong> The HTTP client, i.e., a browser initiates an HTTP request and after a request is made, the client waits for the response. The server processes the request and sends a response back after which client disconnect the connection. So client and server knows about each other during current request and response only. Further requests are made on new connection like client and server are new to each other.</p>
</li>
</ul>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/cropped1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/15/responsive/cropped1-2xl.png 1600w"  alt="" width="1268" height="716"></figure>
<ul class="list">
<li>
<p><strong>HTTP is media independent:</strong> It means, any type of data can be sent (video, text, audio) over HTTP as long as both the client and the server know how to handle the data content. It is required for the client as well as the server to specify the content type using appropriate MIME-type.</p>
</li>
<li>
<p><strong>HTTP is stateless:</strong> As mentioned above, HTTP is connectionless and it is a direct result of HTTP being a stateless protocol. The server and client are aware of each other only during a current request. Afterwards, both of them forget about each other. Due to this nature of the protocol, neither the client nor the browser can retain information between different requests across the web pages.</p>
</li>
</ul>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AWS Account,User, Roles difference</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-question-answers.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-question-answers.html</id>
            <category term="AWS"/>

        <updated>2021-09-16T01:23:43+10:00</updated>
            <summary>
                <![CDATA[
                    IAM is a global service which is sitting at the centre stage of whole AWS infrastructure and is responsible for access and security of users and resources. It is very important for customers and developers to understand the bits and pieces of IAM in order&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit;">IAM is a global service</span><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);"> which is sitting at the centre stage of whole AWS infrastructure and is responsible for access and security of users and resources. It is very important for customers and developers to understand the bits and pieces of IAM in order to ensure safe handling of their AWS accounts which otherwise might easily get compromised. Please note that following terms are very different and should <strong>not be used interchangeably</strong>:</span></p>
<h4><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">account, user, role, access_key_id, secret_access_key</span><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);"><br><br></span>High level view of IAM</h4>
<p>Below is a list of IAM users from an individual account. Note that every <strong><em>user</em></strong> has access key ID and there can be multiple access key ids for 1 <a href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-service.html" target="_blank" rel="noopener noreferrer">IAM User</a>. Now imagine that AWS has over <strong>1 million active customers, </strong>and since every customer can have more than 1 AWS account which means there are definitely more than 1 million accounts in AWS IAM service to manage. For every account there can be many IAM users like below and thus as many more access keys and secrets.</p>
<p><img loading="lazy" src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2017/07/10/img-02-rm0517-b-071017.png" data-is-external-image="true"  alt="New Information in the AWS IAM Console Helps You Follow IAM Best Practices  | AWS Security Blog"></p>
<h4>The Developer view</h4>
<p>Every developer will have access key and secret configured in <a href="#INTERNAL_LINK#/post/null" target="_blank" rel="noopener noreferrer">credential</a> file present in the home directory of their development environment. Remember a developer is independent of AWS IAM and can have credentials configured for multiple IAM user belonging to different AWS accounts. A typical config and credential file may look like :</p>
<p><img loading="lazy" src="https://stuzio.com/wp-content/uploads/2019/02/AWAS-CLI-Config-Files-1024x550.png" data-is-external-image="true"  alt="How to Install and Configure AWS CLI on MacOS – Part 2 – Stuzio"></p>
<p>The above credential file shows 2 sets of credentials configured by the developer and can be switched while calling AWS services using 'profile' option.</p>
<pre>aws s3 ls<br><br>aws s3 ls --profile MyAdmin</pre>
<p>So far our picture looks like as follows:</p>
<p>1 developer -&gt; Multiple Credentials (Multiple Accounts)</p>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/iamusers-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/14/responsive/iamusers-2-2xl.png 1600w"  alt="" width="1024" height="550"></figure>
<p>One important thing to note that the above credentials shown are known as <a href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-temporary-vs-long-term-credentials.html" target="_blank" rel="noopener noreferrer">long term credentials.</a> </p>
<h4>The Machine View - Here comes Roles</h4>
<p>Developer accesses AWS services by using AWS CLI or AWS SDK for different platforms like Java/Python/Node which refer to the credentials file as shown above to grab the credentials and call AWS services. Lets see the problem with this:</p>
<p>Such a setup is ok when the developer is running programs from a very personal machine or laptop as there can be some level of security that can be assumed but what about organisations with 100 developers. Are they going to create 100 set of long term credentials and manage them from IAM console ? Not a good idea. </p>
<p>Another scenario is even for one set of credential, what if the developer wants to run a piece of AWS SDK based application in 10 different EC2 instances. In every instance those credentials should be copied. There must be a better way of doing it.</p>
<p>What if there is a mobile app which needs to access AWS services and for that app there are 1000 users. It will not be wise to bundle long term credentials in mobile app.</p>
<p>AWS provides IAM roles to be created for such scenarios but unlike IAM Users, such roles will have temporary credentials which can are not generated by IAM console, instead AWS STS service is called to get the temporary credentials.</p>
<h4>STS and Roles chemistry</h4>
<p>STS service (by default a global service but can be configured with region endpoints) has assume role action which is called by the client which need temporary credentials for any role they want to assume. For example if all the developers want to assume a 'dev' role created in IAM roles then they will call STS which will verify the trust relationship of the role with the client. Every role while being created in IAM will provide a trust policy specifying Principal who can assume the role like any specific user in any account or an EC2 service. The image below shows cross account access using IAM roles to allow user Joe in a different account to access Dynamo DB in another account.</p>
<p><img loading="lazy" src="https://media.amazonwebservices.com/blog/iam_delegate_cross_account_api_access_1.png" data-is-external-image="true"  alt="Delegating API Access to AWS Services Using IAM Roles | AWS News Blog"></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>awk pattern scanning and processing</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/awk-pattern-scanning-and-processing.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/awk-pattern-scanning-and-processing.html</id>
            <category term="UNIX"/>

        <updated>2021-09-16T01:23:52+10:00</updated>
            <summary>
                <![CDATA[
                    Awk is used to write effective programs that define text patterns to be searched for in each line of a document and the action that is to be taken when a match is found within a line. Syntax: awk options 'criteria {action}' input-file &gt; output-file&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Awk is used to write effective programs that define text patterns to be searched for in each line of a document and the action that is to be taken when a match is found within a line.</p>
<p><strong>Syntax:</strong></p>
<pre>awk options 'criteria {action}' input-file &gt; output-file</pre>
<pre><strong>e.g.</strong> awk '{print}' employee.txt</pre>
<p><strong>Options:</strong>  </p>
<pre>-f program-file : Reads the AWK program source from the file 
                  program-file, instead of from the 
                  first command line argument.<br><br>
-F fs            : Use fs for the input field separator</pre>
<pre><code> awk -F: '{print $4'</code><br><br><code>-F &lt;value&gt;</code> - tells <code>awk</code> what field separator to use. In your case, <code>-F:</code> means that the separator is <code>:</code> (colon).<br><br><strong>e.g. </strong>echo <code>Hello:my:name:is:Alaa</code> | awk -F: '{print $4}'</pre>
<h4 id="Very-Simple" class="title">Some Simple Examples</h4>
<p>The following command runs a simple <code class="command">awk</code> program that searches the input file <code class="filename">mail-list</code> for the character string ‘<code class="literal">li</code>’ </p>
<pre class="screen">awk '/li/ { print $0 }' mail-list<br><br>The slashes indicate that ‘<code class="literal">li</code>’ is the pattern to search for. <br><br>There are single quotes around the <code class="command">awk</code> program so that the shell won’t interpret any of it as special shell characters.<br><br>In an <code class="command">awk</code> rule, either the pattern or the action can be omitted, but not both.<br><br>If the pattern is omitted, then the action is performed for <span class="emphasis"><em>every</em></span> input line. If the action is omitted, the default action is to print all lines that match the pattern.</pre>
<p>Print every line that is longer than 80 characters:</p>
<pre class="screen">awk 'length($0) &gt; 80' data<br><br>The rule has a relational expression as its pattern and has no action—so it uses the default action, printing the record</pre>
<p>Print the length of the longest input line:</p>
<pre class="screen">awk '{ if (length($0) &gt; max) max = length($0) }
     END { print max }' data<br><br>The code associated with <code class="literal">END</code> executes after all input has been read; it’s the other side of the coin to <code class="literal">BEGIN</code>.</pre>
<p>Delete blank lines from a file (or rather, to create a new file similar to the old file but from which the blank lines have been removed):</p>
<pre class="screen">awk 'NF &gt; 0' data<br><br>Print every line that has at least one field</pre>
<p>Print seven random numbers from 0 to 100, inclusive:</p>
<pre class="screen">awk 'BEGIN { for (i = 1; i &lt;= 7; i++)
                 print int(101 * rand()) }'</pre>
<p>Print the total number of kilobytes used by <em class="replaceable"><code>files</code></em>:</p>
<pre class="screen">ls -l <em class="replaceable"><code>files</code></em> | awk '{ x += $5 } END { print "total K-bytes:", x / 1024 }'</pre>
<p>Print a sorted list of the names of all users:</p>
<pre class="screen">awk -F: '{ print $1 }' /etc/passwd | sort</pre>
<p> </p>
<p>Count the number of lines in a file:</p>
<pre class="screen">awk 'END { print NR }' data-file</pre>
<p> </p>
<p>Print even-numbered lines in the datafile:</p>
<pre class="screen">awk 'NR % 2 == 0' data-file</pre>
<p>If you used the expression ‘<code class="literal">NR % 2 == 1</code>’ instead, the program would print the odd-numbered lines.</p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Working with Date and Time in Java</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/finding-todays-date-in-java.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/finding-todays-date-in-java.html</id>
            <category term="JAVA"/>

        <updated>2021-09-14T00:29:55+10:00</updated>
            <summary>
                <![CDATA[
                    The easiest way to find today's date in java is to create a LocalDate, LocalTime or LocalDateTime Object and call its toString() method. All these classes are abstract and therefore in order to get an instance we need to call one of the factory methods.
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>The easiest way to find today's date in java is to create a LocalDate, LocalTime or LocalDateTime Object and call its toString() method.</p>
<p> </p>
<p>All these classes are abstract and therefore in order to get an instance we need to call one of the factory methods. All of them have now() method which gives out current date time.</p>
<h4>Finding today's Date</h4>
<pre>public class CurrentDateTime {<br><br>    public static void main(String[] args) {<br>       LocalDate dNow = LocalDate.now();<br>       System.out.println(dNow);<br>       LocalTime tNow = LocalTime.now();<br>       System.out.println(tNow);<br>       LocalDateTime now = LocalDateTime.now();<br>       System.out.println(now);<br>    }<br>}</pre>
<pre>Running it produces this output: <br>2021-01-28 <br>20:22:44.823 <br>2021-01-28T20:22:44.823</pre>
<p> </p>
<h4>Formatting Dates and Times</h4>
<p>Use java.time.format.DateTimeFormatter</p>
<pre>import java.time.LocalDate;<br>import java.time.ZonedDateTime;<br>import java.time.format.DateTimeFormatter;<br><br>public class JavaDateFormatter {<br>    public static void main(String[] args) {<br>        // Format a date ISO8601-like but with slashes instead of dashes<br>        DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy/LL/dd");<br>        System.out.println(df.format(LocalDate.now()));<br>        // Parse a String to a date using the same formatter<br>        System.out.println(LocalDate.parse("2014/04/01", df));<br>        // Format a Date and Time without timezone information<br>        DateTimeFormatter nTZ = DateTimeFormatter.ofPattern("d MMMM, yyyy h:mm a");<br>        System.out.println(ZonedDateTime.now().format(nTZ));<br>    }<br>}</pre>
<h4>Difference Between Two Dates</h4>
<p>Use the static method Period.between() to find the difference between two LocalDates.</p>
<pre>import java.time.LocalDate;<br>import java.time.Period;<br><br>public class DateDiff {<br>    public static void main(String[] args) {<br>        /** The date at the end of the last century */<br>        LocalDate endofCentury = LocalDate.of(2000, 12, 31);<br>        LocalDate now = LocalDate.now();<br>        Period diff = Period.between(endofCentury, now);<br>        System.out.printf("The 21st century (up to %s) is %s old%n", now, diff);<br>        System.out.printf(<br>                "The 21st century is %d years, %d months and %d days old",<br>                diff.getYears(), diff.getMonths(), diff.getDays());<br>    }<br>}</pre>
<h4>Adding to or Subtracting from a Date or Calendar</h4>
<p>Use the Period class from java.time which represents a length of time, such as a number of days, or hours and minutes. </p>
<pre>import java.time.LocalDate;<br>import java.time.Period;<br><br>/**<br> * DateAdd -- compute the difference between two dates<br> * (e.g., today and 700 days from now).<br> */<br>public class DateAdd {<br>    public static void main(String[] av) {<br>        /** Today's date */<br>        LocalDate now = LocalDate.now();<br>        Period p = Period.ofDays(700);<br>        LocalDate then = now.plus(p);<br>        System.out.printf("Seven hundred days from %s is %s%n", now, then);<br>    }<br>}</pre>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AWS IAM: Temporary vs Long term credentials</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-temporary-vs-long-term-credentials.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-temporary-vs-long-term-credentials.html</id>
            <category term="AWS"/>

        <updated>2021-09-13T17:00:59+10:00</updated>
            <summary>
                <![CDATA[
                    When you use AWS programmatically, you provide your AWS access keys so that AWS can verify your identity in programmatic calls. Your access keys consist of an access key ID (for example, AKIAIOSFODNN7EXAMPLE) and a secret access key (for example, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY). When someone uses access keys that&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When you use AWS programmatically, you provide your AWS access keys so that AWS can verify your identity in programmatic calls. Your access keys consist of an access key ID (for example, <code class="code">AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example, <code class="code">wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). When someone uses access keys that belong to your Root account, then they will have unrestricted access to all the AWS resources that can expose a risk on your pocket. So never create access keys for root accounts and in fact AWS best practice is to delete any access keys for the root account.</p>
<p>Instead of sharing the credentials of the AWS account root user, create individual IAM users, granting each user only the permissions they require.</p>
<h4>Use IAM roles instead of long-term access keys</h4>
<p>Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests to AWS via the AWS CLI, PowerShell, or APIs. It is recommended that all access keys be rotated <strong>every 90 days or less</strong>.</p>
<p>Long-term access keys, such as those associated with IAM users and AWS account root users, <strong>remain valid until you manually revoke them</strong>. However, temporary security credentials obtained through IAM roles and other features of the AWS Security Token Service expire after a short period of time. Use temporary security credentials to help reduce your risk in case credentials are accidentally exposed.</p>
<p>In many scenarios, you don't need long-term access keys that never expire (as you have with an IAM user). Instead, you can create IAM roles and generate temporary security credentials.</p>
<p>Following are the scenarios when you will use IAM role and temporary security credentials:</p>
<ol>
<li>Grant permissions to applications running on <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html" target="_blank" rel="noopener noreferrer">EC2 instances</a>.</li>
<li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html" target="_blank" rel="noopener noreferrer">Grant cross-account access</a> by establishing trust between accounts, and then grant users in one account limited permissions to access the trusted account.</li>
<li>Using a mobile application where we don't want to embed access keys in the mobile app.</li>
<li>Federate into AWS with a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html" target="_blank" rel="noopener noreferrer">SAML supported identity provider</a>.</li>
<li>Federate into AWS with an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html" target="_blank" rel="noopener noreferrer">on-premise identity application</a> that can generate temporary tokens once a user passes the authentication.</li>
</ol>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AWS one user multiple account access</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-one-user-multiple-account-access.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-one-user-multiple-account-access.html</id>
            <category term="AWS"/>

        <updated>2021-09-13T17:00:47+10:00</updated>
            <summary>
                <![CDATA[
                    Very often many organisations will hit a point where they need to manage a set of users and a set of AWS accounts together. One way is to have separate users created in each account for every developer and then you can imagine how cumbersome&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Very often many organisations will hit a point where they need to manage a set of users and a set of AWS accounts together. One way is to have separate users created in each account for every developer and then you can imagine how cumbersome it can become.</p>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td style="width: 34.081%;">AWS Account 1</td>
<td style="width: 31.5123%;">AWS Account 2</td>
<td style="width: 34.4067%;">AWS Account 3</td>
</tr>
<tr>
<td style="width: 34.081%;">John Doe</td>
<td style="width: 31.5123%;">John Doe</td>
<td style="width: 34.4067%;">John Doe</td>
</tr>
<tr>
<td style="width: 34.081%;">Peter Doe</td>
<td style="width: 31.5123%;">Peter Doe</td>
<td style="width: 34.4067%;">Peter Doe</td>
</tr>
<tr>
<td style="width: 34.081%;">...</td>
<td style="width: 31.5123%;">...</td>
<td style="width: 34.4067%;">...</td>
</tr>
</tbody>
</table>
<p>As the table shows above, for each developer to access resources in every other account, they need to manage 3 set of credentials in their <a href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-credentials.html" target="_blank" rel="noopener noreferrer">credentials</a> file and keep switching while programmatically accessing the resources.</p>
<h4>Solution provided by AWS </h4>
<p>All programmatic access to your AWS resources takes place via an API call, and all API calls must be <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html" target="_blank" rel="noopener noreferrer">signed</a> for authentication and authorization. To sign an AWS API call, you need AWS access keys. Therefore, having multiple users across AWS accounts also can pose a challenge because more users can result in maintaining more AWS access keys. Furthermore, it’s important that you protect them. One way of reducing the number of credentials to manage is to leverage temporary AWS security credentials. You can do this by using AWS Security Token Service (STS) and IAM <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html" target="_blank" rel="noopener noreferrer">roles</a>.</p>
<p> </p>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/Screenshot-2021-09-13-at-2.32.32-AM.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/9/responsive/Screenshot-2021-09-13-at-2.32.32-AM-2xl.png 1600w"  alt="" width="1262" height="608"></figure>
<p>To explain the image above, lets break down the pieces:</p>
<ul>
<li>There are two AWS accounts Dev and Prod where an <a href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-service.html">IAM user</a> in Dev account needs access to a resource e.g. EC2 machine provisioned in Prod account.</li>
<li>Dev account user will use its own <a href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-credentials.html">credentials</a> to call IAM/STS service's <a href="https://aws.amazon.com/premiumsupport/knowledge-center/iam-assume-role-cli/" target="_blank" rel="noopener noreferrer">assume role operation</a> with request to assume role (Privileged Access Role shown in the image) present in Prod account.</li>
<li>STS service will then verify the request by checking the policy attached with the role including the trust policy and on successful verification will return a set of temporary credentials. By default, temporary security credentials for an IAM user are valid for a <strong>maximum of 12 hours</strong>. But you can request a duration as short as 15 minutes or as long as 36 hours using the DurationSeconds parameter. For security reasons, a token for an AWS account root user is restricted to a duration of one hour.</li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Manage JDK version in MacOS </title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/switch-jdk-version-in-macos.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/switch-jdk-version-in-macos.html</id>
            <category term="JAVA"/>

        <updated>2021-09-13T17:00:35+10:00</updated>
            <summary>
                <![CDATA[
                    MacOS provides a very streamlined way of managing JDK installations. Use the following command to list all the installed jdk versions: /usr/libexec/java_home -V and you will see the following output: export JAVA_HOME=`/usr/libexec/java_home -v 11` Following screen commands show a scenario where existing Java version 1.8&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>MacOS provides a very streamlined way of managing JDK installations. Use the following command to list all the installed jdk versions:</p>
<pre>/usr/libexec/java_home -V</pre>
<p>and you will see the following output:</p>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/java_home.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/java_home-2xl.png 1600w"  alt="" width="1862" height="218"></figure>
<h3>Exporting specific JAVA_HOME version</h3>
<pre>export JAVA_HOME=`/usr/libexec/java_home -v 11`</pre>
<p>Following screen commands show a scenario where existing Java version 1.8 is switched to Java version 11.</p>
<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/jdkversion.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/8/responsive/jdkversion-2xl.png 1600w"  alt="" width="1124" height="318"></figure>
<p>Similarly we can do for various scenarios:</p>
<ul class="">
<li id="1d99" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Set <code class="ea eb ec ed ee b">JAVA_HOME</code> to JDK version 1.7</li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="eb1f" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">export JAVA_HOME=`/usr/libexec/java_home -v 1.7`</span></pre>
<ul class="">
<li id="cde3" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Set <code class="ea eb ec ed ee b">JAVA_HOME</code> to the default JDK</li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="a855" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">export JAVA_HOME=`/usr/libexec/java_home`</span></pre>
<ul class="">
<li id="8bb2" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Check <code class="ea eb ec ed ee b">JAVA_HOME</code></li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="51d8" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ echo $JAVA_HOME <br>/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home</span></pre>
<ul class="">
<li id="e6b3" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Check the actual java version</li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="7b4c" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ java -version<br>java version "1.8.0_121"<br>Java(TM) SE Runtime Environment (build 1.8.0_121-b13)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span></pre>
<h4>Execute command with different JDK versions</h4>
<p id="d19a" class="gm gn dd go b gp iv gr gs gt iw gv gw gx ix gz ha hb iy hd he hf iz hh hi hj cw bq" data-selectable-paragraph=""><code class="ea eb ec ed ee b">java_home --exec &lt;command&gt;</code> can be used to execute Java commands irrespective of the current setting of <code class="ea eb ec ed ee b">$JAVA_HOME</code>.</p>
<p id="1ad9" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj cw bq" data-selectable-paragraph="">Consider the example of executing three different versions of the java command without changing <code class="ea eb ec ed ee b">$JAVA_HOME</code>:</p>
<ul class="">
<li id="e954" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Using current<code class="ea eb ec ed ee b">$JAVA_HOME</code></li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="3a25" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ echo $JAVA_HOME <br>/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home<br>$ java -version<br>java version "1.6.0_65"</span></pre>
<ul class="">
<li id="d75d" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Using specific version with <code class="ea eb ec ed ee b">java_home --exec java -v 1.7</code></li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="a643" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ /usr/libexec/java_home -v 1.7 --exec java -version<br>java version "1.7.0_45"</span></pre>
<ul class="">
<li id="8b2a" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hm hn ho bq" data-selectable-paragraph="">Using default version with <code class="ea eb ec ed ee b">java_home --exec java</code></li>
</ul>
<pre class="ja jb jc jd je jf jg bx"><span id="01b1" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ /usr/libexec/java_home --exec java -version<br>java version "1.8.0_121"</span></pre>
<p> </p>
<h4>Use Alias to switch JDKs</h4>
<p>Every shell (bash, zsh) has its own profile file like .bash_profile or .zprofile where we can set alias of commands as follows:</p>
<pre># alias commands to enable easy setting of JDK version<br>alias setJDK6='export JAVA_HOME=`/usr/libexec/java_home -v 1.6`'<br>alias setJDK7='export JAVA_HOME=`/usr/libexec/java_home -v 1.7`'<br>alias setJDK8='export JAVA_HOME=`/usr/libexec/java_home -v 1.8`'<br><br># set to the default JDK<br>export JAVA_HOME=`/usr/libexec/java_home`</pre>
<p>We can then easily use the above aliases to switch the environment as follows:</p>
<pre class="ja jb jc jd je jf jg bx"><span id="b090" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ setJDK8</span></pre>
<p id="ee2e" class="gm gn dd go b gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj cw bq" data-selectable-paragraph="">Check <code class="ea eb ec ed ee b">$JAVA_HOME</code></p>
<pre class="ja jb jc jd je jf jg bx"><span id="36f8" class="bq hy hz dd ee b jh ji jj s jk" data-selectable-paragraph="">$ echo $JAVA_HOME <br>/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home</span></pre>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Difference between Root user and IAM user</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-service.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-iam-service.html</id>
            <category term="AWS"/>

        <updated>2021-09-13T02:04:58+10:00</updated>
            <summary>
                <![CDATA[
                    Amazon Web Services require a central management system to manage all the users and the access rules. It would have been a nightmare for Amazon as well its customers if every service would provide its own access and management solution. IAM thus becomes a very&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Amazon Web Services require a central management system to manage all the users and the access rules. It would have been a nightmare for Amazon as well its customers if every service would provide its own access and management solution. <a href="https://aws.amazon.com/iam" target="_blank" rel="noopener noreferrer">IAM</a> thus becomes a very crucial service and it becomes essential for the customers of AWS to understand how this whole setup works.</p>
<h2>Types of Users</h2>
<p>There are two distinct users on a very high level:</p>
<ol>
<li>Root user</li>
<li>IAM user</li>
</ol>
<h4>Root user</h4>
<p>To create an account with AWS, we need to provide an email address which is used to create a sign-in identity which is called as <strong><em>Root user</em></strong>. To sign in as a root user, you need to use the email address and password used while creating the AWS account. </p>
<p><img loading="lazy" src="https://docs.aws.amazon.com/IAM/latest/UserGuide/images/sign-in-root-user-capture.png" data-is-external-image="true"  alt="Signing in to the AWS Management Console as an IAM user or root user - AWS  Identity and Access Management"> </p>
<h4>IAM user</h4>
<p>Any user that is created using IAM console will be called as IAM User. Note the difference that the root user was never created using IAM </p>
<p><img loading="lazy" src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2016/11/02/RMoncur1Phase0.png" data-is-external-image="true"  alt="Now Create and Manage Users More Easily with the AWS IAM Console | AWS  Security Blog"></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AWS Credentials</title>
        <author>
            <name>gauravbhatt</name>
        </author>
        <link href="file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-credentials.html"/>
        <id>file:////Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/aws-credentials.html</id>
            <category term="AWS"/>

        <updated>2021-09-13T02:42:17+10:00</updated>
            <summary>
                <![CDATA[
                    AWS stores its credentials locally in files inside special directory called '.aws' which is located inside the home directory of the operating system. If you don't see the folder then it means you need to configure your AWS environment by doing the following: The file&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>AWS stores its credentials locally in files inside special directory called '.aws' which is located inside the home directory of the operating system. If you don't see the folder then it means you need to configure your AWS environment by doing the following:</p>
<ol>
<li>Create an access key by following this link - <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html" target="_blank" rel="noopener noreferrer">Create AWS Access Key and Secret</a></li>
<li>Run the aws configure command as follows:<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/aws-configure-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure-2-2xl.png 1600w"  alt="" width="1002" height="194"></figure></li>
<li>Once the environment is configured, switch to ~/.aws directory and check the contents of the directory and credentials file as follows:<figure class="post__image"><img loading="lazy"  src="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/aws-configure2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-xs.png 300w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-sm.png 480w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-md.png 768w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-lg.png 1024w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-xl.png 1360w ,file:///Users/lurning.hut/Documents/Publii/sites/lurninghut/preview/media/posts/6/responsive/aws-configure2-2xl.png 1600w"  alt="" width="918" height="314"></figure></li>
</ol>
<h2>Aws credentials file and profiles</h2>
<p>The file must:</p>
<div class="itemizedlist">
<ul class="itemizedlist" type="disc">
<li class="listitem">
<p>Be on the same machine on which you’re running your application.</p>
</li>
<li class="listitem">
<p>Be named <code>credentials</code>.</p>
</li>
<li class="listitem">
<p>Be located in the <code>.aws/</code> folder in your home directory.</p>
</li>
</ul>
<p>If you use different credentials for different tools or applications, you can use <strong>profiles</strong> to configure multiple access keys in the same configuration file. The format of the AWS credentials file should look something like the following.</p>
<pre>[default]<br>aws_access_key_id = YOUR_AWS_ACCESS_KEY_ID<br>aws_secret_access_key = YOUR_AWS_SECRET_ACCESS_KEY<br><br>[project1]<br>aws_access_key_id = ANOTHER_AWS_ACCESS_KEY_ID<br>aws_secret_access_key = ANOTHER_AWS_SECRET_ACCESS_KEY</pre>
<p>You can easily create profiles in your configuration and credentials file by using the aws configure set command:</p>
<pre>aws configure set profile.example.aws_access_key_id myid
aws configure set profile.example.aws_secret_access_key mysecret
aws configure set profile.example.region us-west-1</pre>
<p>This results in the following.</p>
<pre># ~/.aws/config

[default]
region = us-west-1
output = json

[profile example]
region = us-west-1

# ~/.aws/credentials

[default]
aws_access_key_id = <strong>&lt;YOUR_AWS_ACCESS_KEY&gt;</strong>
aws_secret_access_key = <strong>&lt;YOUR_AWS_SECRET_KEY&gt;</strong>	

[example]
aws_access_key_id = myid
aws_secret_access_key = mysecret

</pre>
<p>Using aws configure will create the sections for you, if they do not already exist.</p>
</div>
            ]]>
        </content>
    </entry>
</feed>
